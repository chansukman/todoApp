{"ast":null,"code":"var _jsxFileName = \"/Users/stephanie/Desktop/React/api/todoapp/src/todoListDisplay/todoListDisplay.js\",\n  _s = $RefreshSig$();\nimport './todoListDisplay.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListDisplay = props => {\n  _s();\n  const [editedText, setEditedText] = useState('');\n  const [editingNoteId, setEditingNoteId] = useState(null);\n  const updateClick = id => {\n    // Call the appropriate API or function to update the note with the new text\n    // You might want to use the 'editedText' state to get the updated text\n    // For simplicity, I'm just logging the updated text to the console here\n    console.log(`Updated text for note with id ${id}: ${editedText}`);\n  };\n  const deleteClick = id => {\n    // The delete logic remains the same\n    fetch(props.API_URL + \"api/todoapp/DeleteNotes?id=\" + id, {\n      method: \"DELETE\"\n    }).then(res => res.json()).then(result => {\n      alert(result);\n      props.refreshNotes();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topicTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedText === '' ? note.description : editedText,\n        onChange: e => setEditedText(e.target.value),\n        onFocus: () => setEditingNoteId(note.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topicAction\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"updateBtn\",\n          onClick: () => updateClick(note.id),\n          children: \"Update Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deleteBtn\",\n          onClick: () => deleteClick(note.id),\n          children: \"Delete Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoListDisplay, \"UYcck2uivqdAs+mWKDml0L0Xj7o=\");\n_c = TodoListDisplay;\nexport default TodoListDisplay;\nvar _c;\n$RefreshReg$(_c, \"TodoListDisplay\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","TodoListDisplay","props","_s","editedText","setEditedText","editingNoteId","setEditingNoteId","updateClick","id","console","log","deleteClick","fetch","API_URL","method","then","res","json","result","alert","refreshNotes","children","notes","map","note","className","type","value","description","onChange","e","target","onFocus","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/stephanie/Desktop/React/api/todoapp/src/todoListDisplay/todoListDisplay.js"],"sourcesContent":["import './todoListDisplay.css';\nimport React, { useState, useRef, useEffect } from 'react';\n\nconst TodoListDisplay = (props) => {\n  const [editedText, setEditedText] = useState('');\n  const [editingNoteId, setEditingNoteId] = useState(null);\n\n  const updateClick = (id) => {\n    // Call the appropriate API or function to update the note with the new text\n    // You might want to use the 'editedText' state to get the updated text\n    // For simplicity, I'm just logging the updated text to the console here\n    console.log(`Updated text for note with id ${id}: ${editedText}`);\n  };\n\n  const deleteClick = (id) => {\n    // The delete logic remains the same\n    fetch(props.API_URL + \"api/todoapp/DeleteNotes?id=\" + id, {\n      method: \"DELETE\",\n    })\n      .then(res => res.json())\n      .then(result => {\n        alert(result);\n        props.refreshNotes();\n      });\n  };\n\n  return (\n    <div>\n      {props.notes.map(note =>\n        <div key={note.id} className=\"topicTitle\">\n          <input\n            type=\"text\"\n            value={editedText === '' ? note.description: editedText}\n            onChange={(e) => setEditedText(e.target.value)}\n            onFocus={() => setEditingNoteId(note.id)}\n          />\n          <div className=\"topicAction\">\n            <button className='updateBtn' onClick={() => updateClick(note.id)}>Update Notes</button>\n            <button className='deleteBtn' onClick={() => deleteClick(note.id)}>Delete Notes</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TodoListDisplay;\n"],"mappings":";;AAAA,OAAO,uBAAuB;AAC9B,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMY,WAAW,GAAIC,EAAE,IAAK;IAC1B;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAAE,iCAAgCF,EAAG,KAAIL,UAAW,EAAC,CAAC;EACnE,CAAC;EAED,MAAMQ,WAAW,GAAIH,EAAE,IAAK;IAC1B;IACAI,KAAK,CAACX,KAAK,CAACY,OAAO,GAAG,6BAA6B,GAAGL,EAAE,EAAE;MACxDM,MAAM,EAAE;IACV,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,MAAM,IAAI;MACdC,KAAK,CAACD,MAAM,CAAC;MACbjB,KAAK,CAACmB,YAAY,CAAC,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,EACGpB,KAAK,CAACqB,KAAK,CAACC,GAAG,CAACC,IAAI,iBACnBzB,OAAA;MAAmB0B,SAAS,EAAC,YAAY;MAAAJ,QAAA,gBACvCtB,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAExB,UAAU,KAAK,EAAE,GAAGqB,IAAI,CAACI,WAAW,GAAEzB,UAAW;QACxD0B,QAAQ,EAAGC,CAAC,IAAK1B,aAAa,CAAC0B,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;QAC/CK,OAAO,EAAEA,CAAA,KAAM1B,gBAAgB,CAACkB,IAAI,CAAChB,EAAE;MAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFrC,OAAA;QAAK0B,SAAS,EAAC,aAAa;QAAAJ,QAAA,gBAC1BtB,OAAA;UAAQ0B,SAAS,EAAC,WAAW;UAACY,OAAO,EAAEA,CAAA,KAAM9B,WAAW,CAACiB,IAAI,CAAChB,EAAE,CAAE;UAAAa,QAAA,EAAC;QAAY;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxFrC,OAAA;UAAQ0B,SAAS,EAAC,WAAW;UAACY,OAAO,EAAEA,CAAA,KAAM1B,WAAW,CAACa,IAAI,CAAChB,EAAE,CAAE;UAAAa,QAAA,EAAC;QAAY;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC;IAAA,GAVEZ,IAAI,CAAChB,EAAE;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWZ,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAlC,EAAA,CAzCKF,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
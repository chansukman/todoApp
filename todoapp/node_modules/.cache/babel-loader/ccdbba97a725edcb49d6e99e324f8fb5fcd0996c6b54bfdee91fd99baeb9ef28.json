{"ast":null,"code":"var _jsxFileName = \"/Users/stephanie/Desktop/React/api/todoapp/src/todoListDisplay/todoListDisplay.js\",\n  _s = $RefreshSig$();\nimport './todoListDisplay.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListDisplay = props => {\n  _s();\n  const [editedText, setEditedText] = useState('');\n  const [editingNoteId, setEditingNoteId] = useState(null);\n  const [display, setDisplay] = React.useState('flex');\n  const startEditing = id => {\n    var _props$notes$find;\n    setEditingNoteId(id);\n    setEditedText(((_props$notes$find = props.notes.find(note => note.id === id)) === null || _props$notes$find === void 0 ? void 0 : _props$notes$find.description) || '');\n  };\n  const toggleDisplay = () => {\n    setDisplay(display === 'flex' ? 'none' : 'flex');\n  };\n  // const updateClick = async (id,editedText) => {\n\n  //   try {\n  //     console.log(`Updated text for note with id ${id}: ${editedText}`);\n  //     const response = await fetch(props.API_URL + `api/todoapp/UpdateNotes?id=${id}`, {\n  //       method: \"PUT\",\n  //       // body: data,\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         editedText: editedText,\n  //       }),\n  //     });\n\n  //     if (!response.ok) {\n  //       throw new Error(`Error updating note: ${response.status}`);\n  //     }\n\n  //     const result = await response.json();\n\n  //     alert(result);\n  //     setEditingNoteId(null); // Reset editing after updating\n  //     props.refreshNotes();\n  //   } catch (error) {\n  //     console.error('Error updating note:', error);\n  //     // Handle errors as needed\n  //   }\n  // };\n\n  const deleteClick = async id => {\n    try {\n      const response = await fetch(props.API_URL + `api/todoapp/DeleteNotes?id=${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        throw new Error(`Error deleting note: ${response.status}`);\n      }\n      const result = await response.json();\n      alert(result);\n      props.refreshNotes();\n    } catch (error) {\n      console.error('Error deleting note:', error);\n      // Handle errors as needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topicTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"editedNotetitle\",\n        style: {\n          display\n        },\n        children: editingNoteId === note.id ? editedText : note.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingNoteId === note.id ? editedText : note.description,\n        onFocus: () => startEditing(note.id),\n        onChange: e => setEditedText(e.target.value),\n        className: \"editingNotetitle\",\n        style: {\n          display\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topicAction\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"updateBtn\",\n          onClick: toggleDisplay,\n          children: \"Update Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deleteBtn\",\n          onClick: () => deleteClick(note.id),\n          children: \"Delete Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoListDisplay, \"rTcoH7NDQ+aPQrohiS9Rq18cf30=\");\n_c = TodoListDisplay;\nexport default TodoListDisplay;\nvar _c;\n$RefreshReg$(_c, \"TodoListDisplay\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoListDisplay","props","_s","editedText","setEditedText","editingNoteId","setEditingNoteId","display","setDisplay","startEditing","id","_props$notes$find","notes","find","note","description","toggleDisplay","deleteClick","response","fetch","API_URL","method","ok","Error","status","result","json","alert","refreshNotes","error","console","children","map","className","style","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onFocus","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/stephanie/Desktop/React/api/todoapp/src/todoListDisplay/todoListDisplay.js"],"sourcesContent":["import './todoListDisplay.css';\nimport React, { useState } from 'react';\n\nconst TodoListDisplay = (props) => {\n  const [editedText, setEditedText] = useState('');\n  const [editingNoteId, setEditingNoteId] = useState(null);\n  const [display, setDisplay] = React.useState('flex');\n\n  const startEditing = (id) => {\n    setEditingNoteId(id);\n    setEditedText(props.notes.find(note => note.id === id)?.description || '');\n  };\n\n  const toggleDisplay = () => {\n    setDisplay(display === 'flex' ? 'none' : 'flex');\n  };\n  // const updateClick = async (id,editedText) => {\n\n  //   try {\n  //     console.log(`Updated text for note with id ${id}: ${editedText}`);\n  //     const response = await fetch(props.API_URL + `api/todoapp/UpdateNotes?id=${id}`, {\n  //       method: \"PUT\",\n  //       // body: data,\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({\n  //         editedText: editedText,\n  //       }),\n  //     });\n\n  //     if (!response.ok) {\n  //       throw new Error(`Error updating note: ${response.status}`);\n  //     }\n\n  //     const result = await response.json();\n\n  //     alert(result);\n  //     setEditingNoteId(null); // Reset editing after updating\n  //     props.refreshNotes();\n  //   } catch (error) {\n  //     console.error('Error updating note:', error);\n  //     // Handle errors as needed\n  //   }\n  // };\n\n  const deleteClick = async (id) => {\n    try {\n      const response = await fetch(props.API_URL + `api/todoapp/DeleteNotes?id=${id}`, {\n        method: \"DELETE\",\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error deleting note: ${response.status}`);\n      }\n\n      const result = await response.json();\n      alert(result);\n      props.refreshNotes();\n    } catch (error) {\n      console.error('Error deleting note:', error);\n      // Handle errors as needed\n    }\n  };\n\n  return (\n    <div>\n      {props.notes.map(note =>\n        <div key={note.id} className=\"topicTitle\">\n          <label className='editedNotetitle' style={{display}}>\n          {editingNoteId === note.id ? editedText : note.description}\n          </label>\n          <input\n            type='text'\n            value={editingNoteId === note.id ? editedText : note.description}\n            onFocus={() => startEditing(note.id)}\n            onChange={(e) => setEditedText(e.target.value)}\n            className='editingNotetitle'\n            style={{ display }}\n          />\n          <div className=\"topicAction\">\n            <button className='updateBtn' onClick={toggleDisplay} >Update Notes</button>\n            {/* onClick={() => updateClick(note.id, editedText)} */}\n            <button className='deleteBtn' onClick={() => deleteClick(note.id)}>Delete Notes</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TodoListDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/stephanie/Desktop/React/api/todoapp/src/todoListDisplay/todoListDisplay.js\",\n  _s = $RefreshSig$();\nimport './todoListDisplay.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListDisplay = props => {\n  _s();\n  const [editedText, setEditedText] = useState('');\n  const [editingNoteId, setEditingNoteId] = useState(null);\n  const startEditing = id => {\n    var _props$notes$find;\n    setEditingNoteId(id);\n    setEditedText(((_props$notes$find = props.notes.find(note => note.id === id)) === null || _props$notes$find === void 0 ? void 0 : _props$notes$find.description) || '');\n  };\n  const updateClick = id => {\n    // Call the appropriate API or function to update the note with the new text\n    console.log(`Updated text for note with id ${id}: ${editedText}`);\n    setEditingNoteId(null); // Reset editing after updating\n  };\n  const deleteClick = id => {\n    fetch(props.API_URL + \"api/todoapp/DeleteNotes?id=\" + id, {\n      method: \"DELETE\"\n    }).then(res => res.json()).then(result => {\n      alert(result);\n      props.refreshNotes();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topicTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editingNoteId === note.id ? editedText : note.description,\n        onFocus: () => startEditing(note.id),\n        onChange: e => setEditedText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topicAction\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"updateBtn\",\n          onClick: () => updateClick(note.id),\n          children: \"Update Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deleteBtn\",\n          onClick: () => deleteClick(note.id),\n          children: \"Delete Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoListDisplay, \"UYcck2uivqdAs+mWKDml0L0Xj7o=\");\n_c = TodoListDisplay;\nexport default TodoListDisplay;\nvar _c;\n$RefreshReg$(_c, \"TodoListDisplay\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoListDisplay","props","_s","editedText","setEditedText","editingNoteId","setEditingNoteId","startEditing","id","_props$notes$find","notes","find","note","description","updateClick","console","log","deleteClick","fetch","API_URL","method","then","res","json","result","alert","refreshNotes","children","map","className","type","value","onFocus","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/stephanie/Desktop/React/api/todoapp/src/todoListDisplay/todoListDisplay.js"],"sourcesContent":["import './todoListDisplay.css';\nimport React, { useState } from 'react';\n\nconst TodoListDisplay = (props) => {\n  const [editedText, setEditedText] = useState('');\n  const [editingNoteId, setEditingNoteId] = useState(null);\n\n  const startEditing = (id) => {\n    setEditingNoteId(id);\n    setEditedText(props.notes.find(note => note.id === id)?.description || '');\n  };\n\n  const updateClick = (id) => {\n    // Call the appropriate API or function to update the note with the new text\n    console.log(`Updated text for note with id ${id}: ${editedText}`);\n    setEditingNoteId(null); // Reset editing after updating\n  };\n\n  const deleteClick = (id) => {\n    fetch(props.API_URL + \"api/todoapp/DeleteNotes?id=\" + id, {\n      method: \"DELETE\",\n    })\n      .then(res => res.json())\n      .then(result => {\n        alert(result);\n        props.refreshNotes();\n      });\n  };\n\n  return (\n    <div>\n      {props.notes.map(note =>\n        <div key={note.id} className=\"topicTitle\">\n          <input\n            type=\"text\"\n            value={editingNoteId === note.id ? editedText : note.description}\n            onFocus={() => startEditing(note.id)}\n            onChange={(e) => setEditedText(e.target.value)}\n          />\n          <div className=\"topicAction\">\n            <button className='updateBtn' onClick={() => updateClick(note.id)}>Update Notes</button>\n            <button className='deleteBtn' onClick={() => deleteClick(note.id)}>Delete Notes</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TodoListDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}